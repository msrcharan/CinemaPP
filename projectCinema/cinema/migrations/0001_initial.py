# Generated by Django 5.0.3 on 2024-05-02 20:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Movie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("director", models.CharField(default="N/A", max_length=100)),
                ("cast", models.CharField(default="N/A", max_length=1000)),
                ("producer", models.CharField(default="N/A", max_length=100)),
                ("description", models.TextField()),
                ("release_date", models.DateField()),
                ("duration", models.IntegerField()),
                ("trailer_url", models.URLField(blank=True)),
                ("image", models.URLField(blank=True, null=True)),
                ("genre", models.CharField(default="none", max_length=100)),
                (
                    "rating",
                    models.CharField(
                        choices=[
                            ("G", "General Audiences"),
                            ("PG", "Parental Guidance Suggested"),
                            ("PG-13", "Parents Strongly Cautioned"),
                            ("R", "Restricted"),
                            ("NC-17", "No One 17 and Under Admitted"),
                            ("NR", "Not Rated"),
                        ],
                        default="NR",
                        max_length=5,
                    ),
                ),
                (
                    "star_rating",
                    models.FloatField(
                        default=5.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(10.0),
                        ],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PromoCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=20, unique=True)),
                (
                    "discount_type",
                    models.CharField(
                        choices=[
                            ("Percentage", "Percentage"),
                            ("Fixed Amount", "Fixed Amount"),
                        ],
                        max_length=20,
                    ),
                ),
                ("discount_value", models.DecimalField(decimal_places=2, max_digits=8)),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField()),
                ("max_usage_count", models.IntegerField()),
                ("current_usage_count", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Screen",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("capacity", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(max_length=254, verbose_name="email address"),
                ),
                ("phone_number", models.CharField(max_length=20)),
                (
                    "first_name",
                    models.CharField(max_length=150, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=150, verbose_name="last name"),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_photos/"
                    ),
                ),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                ("receive_promotions", models.BooleanField(default=False)),
                (
                    "credit_card_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("credit_card_expiry", models.DateField(blank=True, null=True)),
                (
                    "credit_card_cvv",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                (
                    "credit_card_number_2",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("credit_card_expiry_2", models.DateField(blank=True, null=True)),
                (
                    "credit_card_cvv_2",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                (
                    "credit_card_number_3",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("credit_card_expiry_3", models.DateField(blank=True, null=True)),
                (
                    "credit_card_cvv_3",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("show", models.CharField(default=None, max_length=2000)),
                ("booking_time", models.DateTimeField()),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=8)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Confirmed", "Confirmed"),
                            ("Cancelled", "Cancelled"),
                        ],
                        max_length=20,
                    ),
                ),
                ("booking_id", models.CharField(max_length=8, unique=True)),
                ("seats", models.CharField(default=None, max_length=2000)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PromoCodeUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "booking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cinema.booking"
                    ),
                ),
                (
                    "promo_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cinema.promocode",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Seat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("show_id", models.CharField(max_length=10)),
                ("row", models.CharField(max_length=1)),
                ("number", models.IntegerField()),
                ("is_booked", models.BooleanField(default=False)),
                (
                    "screen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cinema.screen"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Show",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("show_id", models.CharField(max_length=10, unique=True)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                ("price", models.DecimalField(decimal_places=2, max_digits=8)),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cinema.movie"
                    ),
                ),
                (
                    "screen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cinema.screen"
                    ),
                ),
            ],
        ),
    ]
